name: dbt CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DBT_PROFILES_DIR: ${{ github.workspace }}  # utilise profiles.yml du repo
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: dbt deps
        run: dbt deps

      - name: dbt debug (DEV)
        run: dbt debug --target dev
        env:
          DBT_HOST: ${{ secrets.DBT_HOST }}
          DBT_PORT: ${{ secrets.DBT_PORT }}
          DBT_DB: ${{ secrets.DBT_DB }}
          DBT_USER: ${{ secrets.DBT_USER }}
          DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
          DBT_SCHEMA_DEV: ${{ secrets.DBT_SCHEMA_DEV }}
          DBT_SCHEMA_PROD: ${{ secrets.DBT_SCHEMA_PROD }}

      - name: dbt build (DEV) on PR
        if: github.event_name == 'pull_request'
        run: dbt build --target dev
        env:
          DBT_HOST: ${{ secrets.DBT_HOST }}
          DBT_PORT: ${{ secrets.DBT_PORT }}
          DBT_DB: ${{ secrets.DBT_DB }}
          DBT_USER: ${{ secrets.DBT_USER }}
          DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
          DBT_SCHEMA_DEV: ${{ secrets.DBT_SCHEMA_DEV }}
          DBT_SCHEMA_PROD: ${{ secrets.DBT_SCHEMA_PROD }}

      - name: SQLFluff lint
        run: sqlfluff lint .

      - name: dbt run (PROD) on main
        if: github.ref == 'refs/heads/main'
        run: dbt run --target prod
        env:
          DBT_HOST: ${{ secrets.DBT_HOST }}
          DBT_PORT: ${{ secrets.DBT_PORT }}
          DBT_DB: ${{ secrets.DBT_DB }}
          DBT_USER: ${{ secrets.DBT_USER }}
          DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
          DBT_SCHEMA_DEV: ${{ secrets.DBT_SCHEMA_DEV }}
          DBT_SCHEMA_PROD: ${{ secrets.DBT_SCHEMA_PROD }}
